package edu.sjsu.cmpe275.lab2;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import java.util.*;



@Controller    // This means that this class is a Controller
//@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PassengerRepository passengerRepository;

    @Autowired
    private FlightRepository flightRepository;

    @Autowired
    private ReservationRepository reservationRepository;

    @GetMapping(path="/passenger") // Map ONLY GET Requests
    public @ResponseBody String addNewPassenger (@RequestParam String firstname,
                                            @RequestParam String lastname,
                                            @RequestParam int age,
                                            @RequestParam String gender,
                                            @RequestParam String phone) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Passenger passenger = new Passenger();
        passenger.setFirstName(firstname);
        passenger.setLastName(lastname);
        passenger.setAge(age);
        passenger.setGender(gender);
        passenger.setPhone(phone);

        passengerRepository.save(passenger);
        return "Saved";
    }

    @GetMapping(path = "/reservation/add")
    public @ResponseBody String addReservation(@RequestParam Long id){
        Reservation reservation = new Reservation();
        Passenger passenger = passengerRepository.findByPassengerId(id);
        reservation.setPassenger(passenger);
        reservationRepository.save(reservation);
        for(int i = 0; i < 2; ++i){
            //should add reservation to flight/repository && flight to passenger repository)
        }

        return "Saved";
    }




}